[{"C:\\Users\\ahmed hesham\\Desktop\\new react weather\\weatherapp\\src\\index.js":"1","C:\\Users\\ahmed hesham\\Desktop\\new react weather\\weatherapp\\src\\reportWebVitals.js":"2","C:\\Users\\ahmed hesham\\Desktop\\new react weather\\weatherapp\\src\\App.js":"3"},{"size":535,"mtime":1678264785991,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1678264786356,"results":"6","hashOfConfig":"5"},{"size":2727,"mtime":1682131804798,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uxi5ud",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"C:\\Users\\ahmed hesham\\Desktop\\new react weather\\weatherapp\\src\\index.js",[],[],"C:\\Users\\ahmed hesham\\Desktop\\new react weather\\weatherapp\\src\\reportWebVitals.js",[],[],"C:\\Users\\ahmed hesham\\Desktop\\new react weather\\weatherapp\\src\\App.js",["18"],[],"import React, { useState } from 'react';\nimport { IconContext } from 'react-icons';\nimport { FaSun, FaCloud, FaCloudSun, FaCloudMoon, FaCloudShowersHeavy, FaSnowflake, FaBolt, FaSmog } from 'react-icons/fa';\nimport \"./App.css\"\nimport \"./index.css\"\nconst App = () => {\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n\n  const handleInputChange = (event) => {\n    setCity(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const API_KEY = '89a6f12e3d63c00fd3e7d7e6ba26bdeb';\n    const API_URL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`;\n\n    fetch(API_URL)\n      .then((response) => response.json())\n      .then((data) => setWeatherData(data))\n      .catch((error) => console.error(error));\n  };\n\n  const getWeatherIcon = (weatherCode, isDaytime) => {\n    switch (Math.floor(weatherCode / 100)) {\n      case 2:\n        return <FaBolt />;\n      case 3:\n      case 5:\n        return <FaCloudShowersHeavy />;\n      case 6:\n        return <FaSnowflake />;\n      case 7:\n        return <FaSmog />;\n      case 8:\n        return isDaytime ? <FaSun /> : <FaCloudMoon />;\n      default:\n        return <FaCloud />;\n    }\n  };\n\n  const getBackgroundColor = () => {\n    if (!weatherData || !weatherData.sys) {\n      return 'background-day';\n    }\n\n    const sunriseTime = new Date(weatherData.sys.sunrise * 1000);\n    const sunsetTime = new Date(weatherData.sys.sunset * 1000);\n    const now = new Date();\n\n    if (now >= sunriseTime && now <= sunsetTime) {\n      return 'background-day';\n    } else {\n      return 'background-night';\n    }\n  };\n\n  return (\n    <div className={getBackgroundColor()}>\n      <div className=\"search-box\">\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" placeholder=\"Enter city name\" value={city} onChange={handleInputChange} />\n          <button type=\"submit\">Search</button>\n        </form>\n      </div>\n\n      {weatherData && (\n        <div className=\"weather-details\">\n          <h2>{weatherData.name}, {weatherData.sys.country}</h2>\n          <div className=\"weather-icon\">\n            <IconContext.Provider value={{ className: 'weather-status-icon' }}>\n              {getWeatherIcon(weatherData.weather[0].id, getBackgroundColor() === 'background-day')}\n            </IconContext.Provider>\n            <p>{weatherData.weather[0].description}</p>\n          </div>\n          <p className=\"temperature\">{Math.round(weatherData.main.temp)}&deg;C</p>\n          <p>Feels like {Math.round(weatherData.main.feels_like)}&deg;C</p>\n          <p>Humidity: {weatherData.main.humidity}%</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n",{"ruleId":"19","severity":1,"message":"20","line":3,"column":26,"nodeType":"21","messageId":"22","endLine":3,"endColumn":36},"no-unused-vars","'FaCloudSun' is defined but never used.","Identifier","unusedVar"]