{"ast":null,"code":"import _slicedToArray from\"C:/Users/ahmed hesham/Documents/GitHub/React-weatherapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{IconContext}from'react-icons';import{FaSun,FaCloud,FaCloudSun,FaCloudMoon,FaCloudShowersHeavy,FaSnowflake,FaBolt,FaSmog}from'react-icons/fa';import\"./App.css\";import\"./index.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),city=_useState2[0],setCity=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),weatherData=_useState4[0],setWeatherData=_useState4[1];var handleInputChange=function handleInputChange(event){setCity(event.target.value);};var handleSubmit=function handleSubmit(event){event.preventDefault();var API_KEY='89a6f12e3d63c00fd3e7d7e6ba26bdeb';var API_URL=\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city,\"&appid=\").concat(API_KEY,\"&units=metric\");fetch(API_URL).then(function(response){return response.json();}).then(function(data){return setWeatherData(data);}).catch(function(error){return console.error(error);});};var getWeatherIcon=function getWeatherIcon(weatherCode,isDaytime){switch(Math.floor(weatherCode/100)){case 2:return/*#__PURE__*/_jsx(FaBolt,{});case 3:case 5:return/*#__PURE__*/_jsx(FaCloudShowersHeavy,{});case 6:return/*#__PURE__*/_jsx(FaSnowflake,{});case 7:return/*#__PURE__*/_jsx(FaSmog,{});case 8:return isDaytime?/*#__PURE__*/_jsx(FaSun,{}):/*#__PURE__*/_jsx(FaCloudMoon,{});default:return/*#__PURE__*/_jsx(FaCloud,{});}};var getBackgroundColor=function getBackgroundColor(){if(!weatherData||!weatherData.sys){return'background-day';}var sunriseTime=new Date(weatherData.sys.sunrise*1000);var sunsetTime=new Date(weatherData.sys.sunset*1000);var now=new Date();if(now>=sunriseTime&&now<=sunsetTime){return'background-day';}else{return'background-night';}};return/*#__PURE__*/_jsxs(\"div\",{className:getBackgroundColor(),children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-box\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter city name\",value:city,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Search\"})]})}),weatherData&&/*#__PURE__*/_jsxs(\"div\",{className:\"weather-details\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[weatherData.name,\", \",weatherData.sys.country]}),/*#__PURE__*/_jsxs(\"div\",{className:\"weather-icon\",children:[/*#__PURE__*/_jsx(IconContext.Provider,{value:{className:'weather-status-icon'},children:getWeatherIcon(weatherData.weather[0].id,getBackgroundColor()==='background-day')}),/*#__PURE__*/_jsx(\"p\",{children:weatherData.weather[0].description})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"temperature\",children:[Math.round(weatherData.main.temp),\"\\xB0C\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Feels like \",Math.round(weatherData.main.feels_like),\"\\xB0C\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Humidity: \",weatherData.main.humidity,\"%\"]})]})]});};export default App;","map":{"version":3,"names":["React","useState","IconContext","FaSun","FaCloud","FaCloudSun","FaCloudMoon","FaCloudShowersHeavy","FaSnowflake","FaBolt","FaSmog","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","city","setCity","_useState3","_useState4","weatherData","setWeatherData","handleInputChange","event","target","value","handleSubmit","preventDefault","API_KEY","API_URL","concat","fetch","then","response","json","data","catch","error","console","getWeatherIcon","weatherCode","isDaytime","Math","floor","getBackgroundColor","sys","sunriseTime","Date","sunrise","sunsetTime","sunset","now","className","children","onSubmit","type","placeholder","onChange","name","country","Provider","weather","id","description","round","main","temp","feels_like","humidity"],"sources":["C:/Users/ahmed hesham/Documents/GitHub/React-weatherapp/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { IconContext } from 'react-icons';\nimport { FaSun, FaCloud, FaCloudSun, FaCloudMoon, FaCloudShowersHeavy, FaSnowflake, FaBolt, FaSmog } from 'react-icons/fa';\nimport \"./App.css\"\nimport \"./index.css\"\nconst App = () => {\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n\n  const handleInputChange = (event) => {\n    setCity(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const API_KEY = '89a6f12e3d63c00fd3e7d7e6ba26bdeb';\n    const API_URL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`;\n\n    fetch(API_URL)\n      .then((response) => response.json())\n      .then((data) => setWeatherData(data))\n      .catch((error) => console.error(error));\n  };\n\n  const getWeatherIcon = (weatherCode, isDaytime) => {\n    switch (Math.floor(weatherCode / 100)) {\n      case 2:\n        return <FaBolt />;\n      case 3:\n      case 5:\n        return <FaCloudShowersHeavy />;\n      case 6:\n        return <FaSnowflake />;\n      case 7:\n        return <FaSmog />;\n      case 8:\n        return isDaytime ? <FaSun /> : <FaCloudMoon />;\n      default:\n        return <FaCloud />;\n    }\n  };\n\n  const getBackgroundColor = () => {\n    if (!weatherData || !weatherData.sys) {\n      return 'background-day';\n    }\n\n    const sunriseTime = new Date(weatherData.sys.sunrise * 1000);\n    const sunsetTime = new Date(weatherData.sys.sunset * 1000);\n    const now = new Date();\n\n    if (now >= sunriseTime && now <= sunsetTime) {\n      return 'background-day';\n    } else {\n      return 'background-night';\n    }\n  };\n\n  return (\n    <div className={getBackgroundColor()}>\n      <div className=\"search-box\">\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" placeholder=\"Enter city name\" value={city} onChange={handleInputChange} />\n          <button type=\"submit\">Search</button>\n        </form>\n      </div>\n\n      {weatherData && (\n        <div className=\"weather-details\">\n          <h2>{weatherData.name}, {weatherData.sys.country}</h2>\n          <div className=\"weather-icon\">\n            <IconContext.Provider value={{ className: 'weather-status-icon' }}>\n              {getWeatherIcon(weatherData.weather[0].id, getBackgroundColor() === 'background-day')}\n            </IconContext.Provider>\n            <p>{weatherData.weather[0].description}</p>\n          </div>\n          <p className=\"temperature\">{Math.round(weatherData.main.temp)}&deg;C</p>\n          <p>Feels like {Math.round(weatherData.main.feels_like)}&deg;C</p>\n          <p>Humidity: {weatherData.main.humidity}%</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"6IAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,KAAK,CAAEC,OAAO,CAAEC,UAAU,CAAEC,WAAW,CAAEC,mBAAmB,CAAEC,WAAW,CAAEC,MAAM,CAAEC,MAAM,KAAQ,gBAAgB,CAC1H,MAAO,WAAW,CAClB,MAAO,aAAa,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACpB,GAAM,CAAAC,GAAG,CAAG,QAAN,CAAAA,GAAGA,CAAA,CAAS,CAChB,IAAAC,SAAA,CAAwBf,QAAQ,CAAC,EAAE,CAAC,CAAAgB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA7BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACpB,IAAAI,UAAA,CAAsCpB,QAAQ,CAAC,IAAI,CAAC,CAAAqB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA7CE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAElC,GAAM,CAAAG,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAIC,KAAK,CAAK,CACnCN,OAAO,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAC7B,CAAC,CAED,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIH,KAAK,CAAK,CAC9BA,KAAK,CAACI,cAAc,EAAE,CAEtB,GAAM,CAAAC,OAAO,CAAG,kCAAkC,CAClD,GAAM,CAAAC,OAAO,sDAAAC,MAAA,CAAwDd,IAAI,YAAAc,MAAA,CAAUF,OAAO,iBAAe,CAEzGG,KAAK,CAACF,OAAO,CAAC,CACXG,IAAI,CAAC,SAACC,QAAQ,QAAK,CAAAA,QAAQ,CAACC,IAAI,EAAE,GAAC,CACnCF,IAAI,CAAC,SAACG,IAAI,QAAK,CAAAd,cAAc,CAACc,IAAI,CAAC,GAAC,CACpCC,KAAK,CAAC,SAACC,KAAK,QAAK,CAAAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,GAAC,CAC3C,CAAC,CAED,GAAM,CAAAE,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIC,WAAW,CAAEC,SAAS,CAAK,CACjD,OAAQC,IAAI,CAACC,KAAK,CAACH,WAAW,CAAG,GAAG,CAAC,EACnC,IAAK,EAAC,CACJ,mBAAO/B,IAAA,CAACH,MAAM,IAAG,CACnB,IAAK,EAAC,CACN,IAAK,EAAC,CACJ,mBAAOG,IAAA,CAACL,mBAAmB,IAAG,CAChC,IAAK,EAAC,CACJ,mBAAOK,IAAA,CAACJ,WAAW,IAAG,CACxB,IAAK,EAAC,CACJ,mBAAOI,IAAA,CAACF,MAAM,IAAG,CACnB,IAAK,EAAC,CACJ,MAAO,CAAAkC,SAAS,cAAGhC,IAAA,CAACT,KAAK,IAAG,cAAGS,IAAA,CAACN,WAAW,IAAG,CAChD,QACE,mBAAOM,IAAA,CAACR,OAAO,IAAG,CAAC,CAEzB,CAAC,CAED,GAAM,CAAA2C,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAA,CAAS,CAC/B,GAAI,CAACxB,WAAW,EAAI,CAACA,WAAW,CAACyB,GAAG,CAAE,CACpC,MAAO,gBAAgB,CACzB,CAEA,GAAM,CAAAC,WAAW,CAAG,GAAI,CAAAC,IAAI,CAAC3B,WAAW,CAACyB,GAAG,CAACG,OAAO,CAAG,IAAI,CAAC,CAC5D,GAAM,CAAAC,UAAU,CAAG,GAAI,CAAAF,IAAI,CAAC3B,WAAW,CAACyB,GAAG,CAACK,MAAM,CAAG,IAAI,CAAC,CAC1D,GAAM,CAAAC,GAAG,CAAG,GAAI,CAAAJ,IAAI,EAAE,CAEtB,GAAII,GAAG,EAAIL,WAAW,EAAIK,GAAG,EAAIF,UAAU,CAAE,CAC3C,MAAO,gBAAgB,CACzB,CAAC,IAAM,CACL,MAAO,kBAAkB,CAC3B,CACF,CAAC,CAED,mBACEtC,KAAA,QAAKyC,SAAS,CAAER,kBAAkB,EAAG,CAAAS,QAAA,eACnC5C,IAAA,QAAK2C,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzB1C,KAAA,SAAM2C,QAAQ,CAAE5B,YAAa,CAAA2B,QAAA,eAC3B5C,IAAA,UAAO8C,IAAI,CAAC,MAAM,CAACC,WAAW,CAAC,iBAAiB,CAAC/B,KAAK,CAAET,IAAK,CAACyC,QAAQ,CAAEnC,iBAAkB,EAAG,cAC7Fb,IAAA,WAAQ8C,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,QAAM,EAAS,GAChC,EACH,CAELjC,WAAW,eACVT,KAAA,QAAKyC,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9B1C,KAAA,OAAA0C,QAAA,EAAKjC,WAAW,CAACsC,IAAI,CAAC,IAAE,CAACtC,WAAW,CAACyB,GAAG,CAACc,OAAO,GAAM,cACtDhD,KAAA,QAAKyC,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3B5C,IAAA,CAACV,WAAW,CAAC6D,QAAQ,EAACnC,KAAK,CAAE,CAAE2B,SAAS,CAAE,qBAAsB,CAAE,CAAAC,QAAA,CAC/Dd,cAAc,CAACnB,WAAW,CAACyC,OAAO,CAAC,CAAC,CAAC,CAACC,EAAE,CAAElB,kBAAkB,EAAE,GAAK,gBAAgB,CAAC,EAChE,cACvBnC,IAAA,MAAA4C,QAAA,CAAIjC,WAAW,CAACyC,OAAO,CAAC,CAAC,CAAC,CAACE,WAAW,EAAK,GACvC,cACNpD,KAAA,MAAGyC,SAAS,CAAC,aAAa,CAAAC,QAAA,EAAEX,IAAI,CAACsB,KAAK,CAAC5C,WAAW,CAAC6C,IAAI,CAACC,IAAI,CAAC,CAAC,OAAM,GAAI,cACxEvD,KAAA,MAAA0C,QAAA,EAAG,aAAW,CAACX,IAAI,CAACsB,KAAK,CAAC5C,WAAW,CAAC6C,IAAI,CAACE,UAAU,CAAC,CAAC,OAAM,GAAI,cACjExD,KAAA,MAAA0C,QAAA,EAAG,YAAU,CAACjC,WAAW,CAAC6C,IAAI,CAACG,QAAQ,CAAC,GAAC,GAAI,GAEhD,GACG,CAEV,CAAC,CAED,cAAe,CAAAxD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}